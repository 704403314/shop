DAY1
供应商模块的建立
供应商展示
   _initialize方法初始化控制器信息，其中包括:用D方法创建了对应的模型类，通过方法名找到对应的标题信息，分配到页面中
   搜索功能 搜索条件：供应商名称  状态为1(表示正常的)
供应商添加
   给U方法一个参数，刷新页面 U('index',['nocache' => NOW_TIME])
   由于添加和修改共用一个页面  要删除隐藏域的主键值
供应商修改
   通过jQuery显示商品状态(是或否) $('.status').val([$row.status|default=1])
供应商删除
   使用模型类的setField方法
   更改供应商状态值为0,商品名称加上后缀_del
   $data['name']=array('name'=>['exp','concat(name,"_del")'])

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY2
品牌管理
文章管理
   使用自动完成添加文章的新增时间，
   文章的信息通过联合查询获取到,alias方法给表取个别名,如下：
     $row=$this->alias('a')->join("article_content as b on a.id=b.article_id")->find($id);
文章分类管理
   由于文章分类信息会被多次使用 所以将获取文章分类信息封装到getList方法里，方便维护
   其中的getField('id,name')传两个参数 返回array(`id`=>`name`)关联数组 id字段值为key name字段值为value

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY3
使用uploadify插件通过ajax 技术上传文件 异步处理可以减少用户等待时间 品牌模块使用到了该技术
  官网地址：http://www.uploadify.com/
  中文手册：http://wenku.baidu.com/view/9df6ce0bde80d4d8d15a4faa.html?re=view
  操作步骤:
    1.引入jquery代码 和 uploadify提供的js、css文件
    2.配置uploadify上传参数，并指定一个php文件处理上传功能
    3.配置ThinkPHP上传文件需要的参数
    4.实例化上传文件类  调用上传文件方法 拼接保存的路径 将上传后的文件信息转换为json数据返回
    5.在html文件中将返回的数据转换成js对象 取出需要的信息 为指定的表单属性赋值
    6.交给layer插件提示成功或失败的信息

使用layer插件 实现不同的弹出框 提示上传失败或成功
  网站是:http://layer.layui.com/
  操作步骤:
    1.引入jquery代码 和 layer提供的js、css文件
    2.成功或失败代码如下:
      layer.msg('上传成功',{icon:6,time:1000});
      layer.msg(data.msg,{icon:5,time:1000});
使用ztree插件 替代下拉菜单来显示数据
  ztree插件是国人开发的
  网站是:http://www.ztree.me/v3/main.php
  操作步骤:
     1.引入jquery代码 和 ztree提供的js、css文件
     2.准备ztree配置数据
     3.准备节点数据 由php文件传过来的json字符串形式的数据
     4.找到html节点并使用ztree的方法初始化
     5.在ztree配置数据中添加callback属性，并为该属性添加一个onClick方法，方法的第三个参数就是点击的节点

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY4
使用treegrid 插件 展示下拉菜单数据
  官网地址：http://plugins.jquery.com/treegrid/   
  中文资料地址：http://www.php100.com/html/program/jquery/2014/0328/6730.html
  操作步骤:
       1.引入jquery代码 和 ztree提供的js、css文件
       2.选择目标标签初始化
          $('.tree').treegrid()
       3.为表格添加tree类选择器
       4.不是顶级分类的tr 上面加treegrid-parent-{'parent_id'}
使用nestedSets 操作嵌套集合数据
  文件下载地址：https://github.com/kunx-edu/NestedSets
  操作步骤:
       1.引入相关文件，实现DbMysql接口
       2.在实现接口的类中 每个方法里面打印传过来的实参(dump(func_get_args))
       3.在有参数的方法中 拼接sql实现该方法
  注意: 数据修改时要判断父节点id是否有变化

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY5
商品表的添加
  使用到的插件： uploadify上传文件 ztree展示商品分类列表数据 layer实现弹出框 ueditor编辑文字
  使用自动完成添加 料号、录入时间、商品状态
  注意：开启事务 添加数据过程中失败则回滚  所有数据添加成功则提交
商品表数据的展示
  商品的推荐状态(精品、新品、热销)要用图片展示出来(对号表示是  叉号表示否)
商品表的修改
  商品回显：
     使用jquery显示商品状态的选中状态
     使用ztree显示商品分类
     使用自定义方法arr2select回显 商品品牌 商品供应商 下拉菜单
     使用联合查询回显商品基本数据和商品介绍

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY6
商品相册删除
    先判断是新增的还是数据库已有的图片,如果是新增的可直接删除对应的节点，如果是数据库已有的
      发送ajax请求 去数据库删除
商品搜索
    使用自定义的arr2select onearr2select 方法获取搜索可选的列表数据，并实现回显
    判断每一个搜索条件是否有值，有则将其添加到搜索条件数组中

权限的添加
   使用nestedSets 计算层级关系
权限的修改
   使用nestedSets 计算层级关系
权限的删除
    物理删除

角色添加 角色修改 角色删除 都要开启事务并更新关联表 角色权限表

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

DAY7
管理员表的添加
管理员表修改
管理员表删除
验证登录
  管理员基本信息和权限信息保存到session中
  获取当前管理员权限信息:
       1.将admin表和role_permission表通过role_id关联起来查询管理员对应的角色可以访问的路径对应的id(permission_id)
       2.查询admin_permission表获取管理员额外可以访问的路径对应的id(permission_id)
       3.将步骤1和步骤2 的结果作为一个结果集和permission表通过permission_id关联起来查询可以访问的路径(path)
  注意:前两个步骤都有个条件是管理员的id为当前登录管理员的id
权限验证
  根据管理员的角色 以及拥有的附加权限 获取允许访问的路径，如果该管理员当前访问的路径不在允许访问路径，
  则提示无权访问 跳转到登录页面